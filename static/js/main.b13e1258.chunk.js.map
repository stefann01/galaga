{"version":3,"sources":["components/score/score.module.scss","App.module.scss","components/overHead/overHead.module.scss","components/coins/coins.module.scss","components/bullets/bullets.module.scss","components/enemies/enemies.module.scss","components/enemyBullets/enemyBullets.module.scss","components/rocket.module.scss","model/gameActions.enum.tsx","assets/videos/backgroundv2.mp4","components/bullets/bullets.tsx","components/coins/coins.tsx","assets/icons/Monstrulet2.2.svg","components/enemies/enemies.tsx","model/enemy.ts","components/enemyBullets/enemyBullets.tsx","components/rocket.tsx","components/overHead/overHead.tsx","assets/icons/candy.svg","assets/icons/FullLife.svg","assets/icons/EmptyLife.svg","components/score/score.tsx","model/bullet.ts","model/coin.ts","Context/gameReducer.tsx","model/rocket.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","GameActions","BulletsComponent","bullets","dispatch","useEffect","interval","setInterval","length","type","MoveBullets","clearInterval","map","bullet","index","className","styles","style","left","x","top","y","width","height","React","memo","Coins","coins","MoveCoins","coin","isSpecial","specialCoin","Enemies","enemies","console","log","enemy","alt","src","Alien","prevProps","nextProps","JSON","stringify","Enemy","constructor","lifePoints","defaultEnemyLife","enemyShootProbability","EnemyBullets","enemyBullets","Math","random","AddEnemyBullet","MoveEnemyBullet","RocketComp","rocket","setMousePosition","e","Move","payload","clientX","clientY","window","addEventListener","removeEventListener","handleKeyDown","keyCode","Shoot","BuyLives","IncreaseRocketPower","handleClick","OverHead","overheadPercentage","progressBarStyle","indicatorStyles","wrapper","text","progressBar","indicator","Score","lives","candies","score","enemiesNumber","rocketPower","container","leftDisplayer","leftDisplayerItem","Candy","overheadContainer","rightDisplayer","Array","EmptyLife","FullLife","Bullet","bulletWidth","bulletHeight","bulletTime","bulletSpace","Coin","coinDropProbability","powerIncreasePrice","gameReducer","state","action","power","isOverHead","sound","play","randomEnemyIndex","floor","overlappingCoins","specialCandyCollision","filter","innerHeight","isOverlapping","doOverlap","rocketIsHit","find","isGameOver","overlappings","newCoins","newCoin","b","includes","AddEnemy","l1","r1","l2","r2","Rocket","getLine","numberOfEnemies","enemySize","yOfLine","marginDistanceWidth","canvasLeftMargin","spaceBetweenAliens","innerWidth","current","i","push","enemyGenerator","App","setPlay","useState","gameOver","setGameOver","useMemo","Howl","html5","volume","useReducer","pressedKeys","Set","position","autoPlay","muted","loop","right","bottom","minWidth","maxWidth","BackgroundVideo","menuContainer","buttons","PlayButton","onClick","buttonsText","HelpButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b13e1258.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"score_container__1ScWa\",\"rightDisplayer\":\"score_rightDisplayer__1YFjj\",\"life\":\"score_life__1FTkP\",\"text\":\"score_text__3KUxO\",\"overheadContainer\":\"score_overheadContainer__1fQs-\",\"leftDisplayer\":\"score_leftDisplayer__2yMYq\",\"leftDisplayerItem\":\"score_leftDisplayerItem__2EqSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1CCjA\",\"menuContainer\":\"App_menuContainer__2yO-P\",\"buttons\":\"App_buttons__1REvI\",\"PlayButton\":\"App_PlayButton__1aD-I\",\"HelpButton\":\"App_HelpButton__kcHVG\",\"buttonsText\":\"App_buttonsText__HdB2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"overHead_wrapper__P6R5V\",\"progressBar\":\"overHead_progressBar__3_6At\",\"indicator\":\"overHead_indicator__1qp73\",\"text\":\"overHead_text__2t0B0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coin\":\"coins_coin__2ieoe\",\"specialCoin\":\"coins_specialCoin__2qn7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bullet\":\"bullets_bullet__3xEOh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enemy\":\"enemies_enemy__2MTdW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bullet\":\"enemyBullets_bullet__2BeyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rocket\":\"rocket_rocket__2UCrn\"};","enum GameActions {\r\n  Move,\r\n  Stop,\r\n  Shoot,\r\n  MoveBullets,\r\n  MoveEnemyBullet,\r\n  AddEnemyBullet,\r\n  MoveCoins,\r\n  AddEnemy,\r\n  BuyLives,\r\n  IncreaseRocketPower,\r\n}\r\n\r\nexport default GameActions;\r\n","export default __webpack_public_path__ + \"static/media/backgroundv2.52fdbc2d.mp4\";","import React, { useEffect } from \"react\";\r\n\r\nimport Action from \"../../Context/gameReducer\";\r\nimport Bullet from \"../../model/bullet\";\r\nimport GameActions from \"../../model/gameActions.enum\";\r\nimport styles from \"./bullets.module.scss\";\r\n\r\ninterface BulletsProps {\r\n  bullets: Bullet[];\r\n  dispatch: React.Dispatch<Action<GameActions, any>>;\r\n}\r\nfunction BulletsComponent({ bullets, dispatch }: BulletsProps) {\r\n  // console.log(\"bullets render\");\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (bullets.length > 0) {\r\n        dispatch({ type: GameActions.MoveBullets });\r\n      }\r\n    }, 5);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [bullets.length, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {bullets.length > 0 &&\r\n        bullets.map((bullet, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              className={styles.bullet}\r\n              style={{\r\n                left: bullet.x,\r\n                top: bullet.y,\r\n                width: bullet.width,\r\n                height: bullet.height,\r\n              }}\r\n            ></div>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(BulletsComponent);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport Action from \"../../Context/gameReducer\";\r\nimport Coin from \"../../model/coin\";\r\nimport GameActions from \"../../model/gameActions.enum\";\r\nimport styles from \"./coins.module.scss\";\r\n\r\ninterface CoinsProps {\r\n  coins: Coin[];\r\n  dispatch: React.Dispatch<Action<GameActions, any>>;\r\n}\r\nfunction Coins({ coins, dispatch }: CoinsProps) {\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (coins.length) {\r\n        dispatch({ type: GameActions.MoveCoins });\r\n      }\r\n    }, 10);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [coins.length, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {coins.map((coin, index) => (\r\n        <div\r\n          key={index}\r\n          className={coin.isSpecial ? styles.specialCoin : styles.coin}\r\n          style={{\r\n            left: coin.x,\r\n            top: coin.y,\r\n            width: coin.width,\r\n            height: coin.height,\r\n          }}\r\n        ></div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Coins);\r\n","export default __webpack_public_path__ + \"static/media/Monstrulet2.2.d6c4b34b.svg\";","import React from \"react\";\r\n\r\nimport Alien from \"../../assets/icons/Monstrulet2.2.svg\";\r\nimport Enemy from \"../../model/enemy\";\r\nimport styles from \"./enemies.module.scss\";\r\n\r\ninterface EnemiesProps {\r\n  enemies: Enemy[];\r\n}\r\n\r\nconst Enemies = React.memo(\r\n  ({ enemies }: EnemiesProps) => {\r\n    console.log(\"Enemies render\");\r\n    return (\r\n      <>\r\n        {enemies.map((enemy, index) => (\r\n          <img\r\n            key={index}\r\n            alt={`Enemy${index}`}\r\n            className={styles.enemy}\r\n            style={{\r\n              left: enemy.x,\r\n              top: enemy.y,\r\n              width: enemy.width,\r\n              height: enemy.height,\r\n            }}\r\n            src={Alien}\r\n          />\r\n        ))}\r\n      </>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => {\r\n    if (\r\n      JSON.stringify(prevProps.enemies) === JSON.stringify(nextProps.enemies)\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n);\r\n\r\nexport default Enemies;\r\n","class Enemy {\r\n  public static readonly enemyShootProbability = 0.2;\r\n  public static readonly defaultEnemyLife = 1;\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public width: number,\r\n    public height: number,\r\n    public lifePoints: number = Enemy.defaultEnemyLife\r\n  ) {}\r\n}\r\n\r\nexport default Enemy;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport Action from \"../../Context/gameReducer\";\r\nimport Bullet from \"../../model/bullet\";\r\nimport Enemy from \"../../model/enemy\";\r\nimport GameActions from \"../../model/gameActions.enum\";\r\nimport styles from \"./enemyBullets.module.scss\";\r\n\r\ninterface EnemyBulletsProps {\r\n  dispatch: React.Dispatch<Action<GameActions, any>>;\r\n  enemyBullets: Bullet[];\r\n}\r\nfunction EnemyBullets({ enemyBullets, dispatch }: EnemyBulletsProps) {\r\n  // console.log(\"enemy bullet render\");\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (Math.random() < Enemy.enemyShootProbability) {\r\n        dispatch({ type: GameActions.AddEnemyBullet });\r\n      }\r\n    }, 500);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (enemyBullets.length) {\r\n        dispatch({ type: GameActions.MoveEnemyBullet });\r\n      }\r\n    }, 10);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [enemyBullets.length, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {enemyBullets.length > 0 &&\r\n        enemyBullets.map((bullet, index) => (\r\n          <div\r\n            key={index}\r\n            className={styles.bullet}\r\n            style={{\r\n              left: bullet.x,\r\n              top: bullet.y,\r\n              width: bullet.width,\r\n              height: bullet.height,\r\n            }}\r\n          ></div>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(EnemyBullets);\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport Action from \"../Context/gameReducer\";\r\nimport GameActions from \"../model/gameActions.enum\";\r\nimport Rocket from \"../model/rocket\";\r\nimport styles from \"./rocket.module.scss\";\r\n\r\ninterface RocketComponentProps {\r\n  rocket: Rocket;\r\n  dispatch: React.Dispatch<Action<GameActions, any>>;\r\n}\r\nconst RocketComp = React.memo(\r\n  function RocketComponent({ rocket, dispatch }: RocketComponentProps) {\r\n    useEffect(() => {\r\n      function setMousePosition(e) {\r\n        dispatch({\r\n          type: GameActions.Move,\r\n          payload: { x: e.clientX, y: e.clientY },\r\n        });\r\n      }\r\n      window.addEventListener(\"mousemove\", setMousePosition);\r\n\r\n      return () => window.removeEventListener(\"mousemove\", setMousePosition);\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n      const handleKeyDown = (e) => {\r\n        if (e.keyCode === 32) {\r\n          //space\r\n          dispatch({ type: GameActions.Shoot });\r\n        }\r\n        if (e.keyCode === 66) {\r\n          //b\r\n          dispatch({ type: GameActions.BuyLives });\r\n        }\r\n        if (e.keyCode === 70) {\r\n          //f\r\n          dispatch({ type: GameActions.IncreaseRocketPower });\r\n        }\r\n      };\r\n\r\n      const handleClick = () => {\r\n        dispatch({ type: GameActions.Shoot });\r\n      };\r\n\r\n      window.addEventListener(\"click\", handleClick);\r\n      window.addEventListener(\"keyup\", handleKeyDown);\r\n\r\n      return () => {\r\n        window.removeEventListener(\"click\", handleKeyDown);\r\n        window.removeEventListener(\"keyup\", handleClick);\r\n      };\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <div\r\n        className={styles.rocket}\r\n        style={{\r\n          left: rocket.x,\r\n          top: rocket.y,\r\n          width: rocket.width,\r\n          height: rocket.height,\r\n        }}\r\n      ></div>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => {\r\n    if (prevProps.rocket.x === nextProps.rocket.x) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n);\r\n\r\nexport default RocketComp;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./overHead.module.scss\";\r\n\r\ninterface OverHeadProps {\r\n  width: number;\r\n  overheadPercentage: number;\r\n}\r\n\r\nexport default function OverHead({ width, overheadPercentage }: OverHeadProps) {\r\n  const progressBarStyle: React.CSSProperties = {\r\n    width,\r\n  };\r\n\r\n  const indicatorStyles: React.CSSProperties = {\r\n    width: `${overheadPercentage}%`,\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {overheadPercentage === 100 && (\r\n        <h1 className={styles.text}> Overheat!</h1>\r\n      )}\r\n      <div className={styles.progressBar} style={{ ...progressBarStyle }}>\r\n        <div className={styles.indicator} style={{ ...indicatorStyles }}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/candy.5f2935f2.svg\";","export default __webpack_public_path__ + \"static/media/FullLife.058e894c.svg\";","export default __webpack_public_path__ + \"static/media/EmptyLife.7fe8e7ba.svg\";","import React from \"react\";\r\n\r\nimport OverHead from \"../overHead/overHead\";\r\nimport styles from \"./score.module.scss\";\r\nimport Candy from \"../../assets/icons/candy.svg\";\r\nimport Alien from \"../../assets/icons/Monstrulet2.2.svg\";\r\nimport FullLife from \"../../assets/icons/FullLife.svg\";\r\nimport EmptyLife from \"../../assets/icons/EmptyLife.svg\";\r\n\r\ninterface ScoreProps {\r\n  lives: number;\r\n  candies: number;\r\n  score: number;\r\n  overheadPercentage: number;\r\n  enemiesNumber: number;\r\n  rocketPower: number;\r\n}\r\n\r\nconst Score = React.memo(\r\n  function ScoreComponent({\r\n    lives,\r\n    candies,\r\n    score,\r\n    overheadPercentage,\r\n    enemiesNumber,\r\n    rocketPower,\r\n  }: ScoreProps) {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.leftDisplayer}>\r\n          <div className={styles.leftDisplayerItem}>\r\n            <img src={Candy} alt=\"candy\" width={40} height={30} />\r\n            <p className={styles.text}>:{candies}</p>\r\n          </div>\r\n\r\n          <div className={styles.leftDisplayerItem}>\r\n            <img src={Alien} alt=\"enemy\" />\r\n            <p className={styles.text}>:{enemiesNumber}</p>\r\n          </div>\r\n\r\n          <div className={styles.leftDisplayerItem}>\r\n            <p>Power: {rocketPower}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={styles.overheadContainer}>\r\n          <OverHead width={382} overheadPercentage={overheadPercentage} />\r\n        </div>\r\n\r\n        <div className={styles.rightDisplayer}>\r\n          {lives < 5 &&\r\n            [...Array(5 - lives)].map((index) => {\r\n              return <img src={EmptyLife} alt={`life${index}`} />;\r\n            })}\r\n          {[...Array(lives)].map((index) => {\r\n            return <img src={FullLife} alt={`life${index}`} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  },\r\n  (prevProps, nextProps) => {\r\n    if (\r\n      prevProps.candies === nextProps.candies &&\r\n      prevProps.overheadPercentage === nextProps.overheadPercentage &&\r\n      prevProps.lives === nextProps.lives\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n);\r\n\r\nexport default Score;\r\n","class Bullet {\r\n  public static readonly bulletTime = 70;\r\n  public static readonly bulletSpace = 0.01;\r\n  public static bulletWidth = 20;\r\n  public static bulletHeight = 30;\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public width: number = Bullet.bulletWidth,\r\n    public height: number = Bullet.bulletHeight\r\n  ) {}\r\n}\r\n\r\nexport default Bullet;\r\n","class Coin {\r\n  public static readonly coinDropProbability = 0.3;\r\n  public static readonly width = 50;\r\n  public static readonly height = 40;\r\n  public static readonly powerIncreasePrice = 10;\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public width: number = Coin.width,\r\n    public height: number = Coin.height,\r\n    public isSpecial: boolean = false\r\n  ) {}\r\n}\r\n\r\nexport default Coin;\r\n","import { Howl } from \"howler\";\r\nimport Bullet from \"../model/bullet\";\r\nimport Coin from \"../model/coin\";\r\nimport Enemy from \"../model/enemy\";\r\nimport GameActions from \"../model/gameActions.enum\";\r\nimport Rocket from \"../model/rocket\";\r\n\r\nexport const OVERHEAD_LIMIT = 5;\r\nexport const MAXIMUM_LIVES_POSSIBLE = 5;\r\nexport const LIFE_PRICE = 5;\r\n\r\nexport default class Action<T, P> {\r\n  constructor(public type: T, public payload?: P) {}\r\n}\r\n\r\nexport interface GameReducerState {\r\n  rocket: Rocket;\r\n  bullets: Bullet[];\r\n  enemyBullets: Bullet[];\r\n  pressedKeys: Set<number>;\r\n  enemies: Enemy[];\r\n  score: number;\r\n  isGameOver: boolean;\r\n  isOverHead: boolean;\r\n  coins: Coin[];\r\n  candies: number;\r\n  lives: number;\r\n  sound: Howl;\r\n}\r\n\r\nexport function gameReducer(\r\n  state: GameReducerState,\r\n  action: Action<GameActions, any>\r\n) {\r\n  switch (action.type) {\r\n    case GameActions.Move:\r\n      return {\r\n        ...state,\r\n        rocket: {\r\n          ...state.rocket,\r\n          x: action.payload.x,\r\n          y: action.payload.y,\r\n        },\r\n      };\r\n\r\n    case GameActions.IncreaseRocketPower:\r\n      return {\r\n        ...state,\r\n        rocket:\r\n          state.candies > Coin.powerIncreasePrice\r\n            ? {\r\n                ...state.rocket,\r\n                power: state.rocket.power + 1,\r\n              }\r\n            : state.rocket,\r\n        candies:\r\n          state.candies > Coin.powerIncreasePrice\r\n            ? state.candies - Coin.powerIncreasePrice\r\n            : state.candies,\r\n      } as GameReducerState;\r\n\r\n    case GameActions.BuyLives:\r\n      if (state.candies >= LIFE_PRICE && state.lives < MAXIMUM_LIVES_POSSIBLE) {\r\n        return {\r\n          ...state,\r\n          candies: state.candies - LIFE_PRICE,\r\n          lives: state.lives + 1,\r\n        } as GameReducerState;\r\n      }\r\n      return state;\r\n\r\n    case GameActions.Shoot: {\r\n      if (!state.isOverHead) {\r\n        state.sound.play();\r\n      }\r\n      return {\r\n        ...state,\r\n        bullets: !state.isOverHead\r\n          ? [\r\n              ...state.bullets,\r\n              new Bullet(\r\n                state.rocket.x +\r\n                  state.rocket.width / 2 -\r\n                  Bullet.bulletWidth / 2,\r\n                state.rocket.y\r\n              ),\r\n            ]\r\n          : state.bullets,\r\n        isOverHead: state.bullets.length >= OVERHEAD_LIMIT,\r\n      } as GameReducerState;\r\n    }\r\n\r\n    case GameActions.AddEnemyBullet:\r\n      if (state.enemies.length) {\r\n        const randomEnemyIndex = Math.floor(\r\n          Math.random() * state.enemies.length\r\n        );\r\n\r\n        return {\r\n          ...state,\r\n          enemyBullets: [\r\n            ...state.enemyBullets,\r\n            new Bullet(\r\n              state.enemies[randomEnemyIndex].x,\r\n              state.enemies[randomEnemyIndex].y,\r\n              20,\r\n              40\r\n            ),\r\n          ],\r\n        } as GameReducerState;\r\n      }\r\n      return state;\r\n\r\n    case GameActions.MoveCoins:\r\n      let overlappingCoins = 0;\r\n      let specialCandyCollision = false;\r\n      return {\r\n        ...state,\r\n        coins: state.coins.length\r\n          ? state.coins\r\n              .map((coin) => {\r\n                coin.y += 1;\r\n                return { ...coin };\r\n              })\r\n              .filter((coin) => coin.y < window.innerHeight)\r\n              .filter((coin) => {\r\n                const isOverlapping = doOverlap(\r\n                  { x: coin.x, y: coin.y },\r\n                  { x: coin.x + coin.width, y: coin.y + coin.height },\r\n                  { x: state.rocket.x, y: state.rocket.y },\r\n                  {\r\n                    x: state.rocket.x + state.rocket.width,\r\n                    y: state.rocket.y + state.rocket.height,\r\n                  }\r\n                );\r\n                if (isOverlapping) {\r\n                  overlappingCoins += 1;\r\n                  if (coin.isSpecial) {\r\n                    specialCandyCollision = true;\r\n                  }\r\n                }\r\n                return !isOverlapping;\r\n              })\r\n          : state.coins,\r\n        candies: state.candies + overlappingCoins,\r\n        rocket: specialCandyCollision\r\n          ? { ...state.rocket, power: state.rocket.power + 1 }\r\n          : state.rocket,\r\n      } as GameReducerState;\r\n\r\n    case GameActions.MoveEnemyBullet: {\r\n      const rocketIsHit = state.enemyBullets.find((bullet) =>\r\n        doOverlap(\r\n          { x: bullet.x, y: bullet.y },\r\n          { x: bullet.x + bullet.width, y: bullet.y + bullet.height },\r\n          { x: state.rocket.x, y: state.rocket.y },\r\n          {\r\n            x: state.rocket.x + state.rocket.width,\r\n            y: state.rocket.y + state.rocket.height,\r\n          }\r\n        )\r\n      );\r\n      return {\r\n        ...state,\r\n        enemyBullets: state.enemyBullets.length\r\n          ? state.enemyBullets\r\n              .map((bullet) => {\r\n                bullet.y += 1;\r\n                return { ...bullet };\r\n              })\r\n              .filter((bullet) => bullet.y < window.innerHeight)\r\n              .filter(\r\n                (bullet) =>\r\n                  !(bullet.x === rocketIsHit?.x && bullet.y === rocketIsHit?.y)\r\n              )\r\n          : state.enemyBullets,\r\n        isGameOver: state.lives === 0,\r\n        lives: rocketIsHit ? state.lives - 1 : state.lives,\r\n      } as GameReducerState;\r\n    }\r\n\r\n    case GameActions.MoveBullets: {\r\n      if (state.bullets.length) {\r\n        let overlappings: (Bullet | Enemy)[] = [];\r\n        let newCoins = [...state.coins];\r\n        for (let bullet of state.bullets) {\r\n          for (let enemy of state.enemies) {\r\n            if (\r\n              doOverlap(\r\n                { x: bullet.x, y: bullet.y },\r\n                { x: bullet.x + bullet.width, y: bullet.y + bullet.height },\r\n                { x: enemy.x, y: enemy.y },\r\n                { x: enemy.x + enemy.width, y: enemy.y + enemy.height }\r\n              )\r\n            ) {\r\n              overlappings = [...overlappings, enemy];\r\n              overlappings = [...overlappings, bullet];\r\n\r\n              if (state.enemies.length === 1) {\r\n                const newCoin = new Coin(enemy.x, enemy.y);\r\n                newCoin.isSpecial = true;\r\n                newCoins = [...newCoins, newCoin];\r\n              } else {\r\n                if (\r\n                  Math.random() <= Coin.coinDropProbability &&\r\n                  enemy.lifePoints <= state.rocket.power\r\n                ) {\r\n                  newCoins = [...newCoins, new Coin(enemy.x, enemy.y)];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return {\r\n          ...state,\r\n          bullets:\r\n            state.bullets.length > 0\r\n              ? state.bullets\r\n                  .map((bullet) => {\r\n                    bullet.y -= 2;\r\n                    return bullet;\r\n                  })\r\n                  .filter((bullet) => bullet.y > 0)\r\n                  .filter(\r\n                    (bullet) =>\r\n                      !overlappings.find(\r\n                        (b) => b.x === bullet.x && b.y === bullet.y\r\n                      )\r\n                  )\r\n              : state.bullets,\r\n          coins: newCoins,\r\n          enemies: overlappings.length\r\n            ? state.enemies\r\n                .map((enemy) => {\r\n                  if (overlappings.includes(enemy)) {\r\n                    return {\r\n                      ...enemy,\r\n                      lifePoints: enemy.lifePoints - state.rocket.power,\r\n                    };\r\n                  }\r\n                  return enemy;\r\n                })\r\n                .filter((enemy) => enemy.lifePoints > 0)\r\n            : [...state.enemies],\r\n          score: state.score + Math.floor(overlappings.length / 2),\r\n\r\n          isOverHead: state.bullets.length >= OVERHEAD_LIMIT,\r\n        } as GameReducerState;\r\n      }\r\n      return state;\r\n    }\r\n\r\n    case GameActions.AddEnemy:\r\n      return {\r\n        ...state,\r\n        enemies: [\r\n          ...state.enemies,\r\n          new Enemy(\r\n            action.payload.x,\r\n            action.payload.y,\r\n            action.payload.width,\r\n            action.payload.height\r\n          ),\r\n        ],\r\n      } as GameReducerState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Returns true if two rectangles\r\n// (l1, r1) and (l2, r2) overlap\r\nfunction doOverlap(l1, r1, l2, r2) {\r\n  // To check if either rectangle is actually a line\r\n  // For example : l1 ={-1,0} r1={1,1} l2={0,-1} r2={0,1}\r\n\r\n  if (l1.x === r1.x || l1.y === r1.y || l2.x === r2.x || l2.y === r2.y) {\r\n    // the line cannot have positive overlap\r\n    return false;\r\n  }\r\n\r\n  // If one rectangle is on left side of other\r\n  if (l1.x >= r2.x || l2.x >= r1.x) {\r\n    return false;\r\n  }\r\n\r\n  // If one rectangle is above other\r\n  if (l1.y >= r2.y || l2.y >= r1.y) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n","class Rocket {\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    public width: number,\r\n    public height: number,\r\n    public power: number = 1\r\n  ) {}\r\n}\r\n\r\nexport default Rocket;\r\n","import { Howl } from \"howler\";\r\nimport { useEffect, useMemo, useReducer, useState } from \"react\";\r\n\r\nimport styles from \"./App.module.scss\";\r\nimport BackgroundVideo from \"./assets/videos/backgroundv2.mp4\";\r\nimport BulletsComponent from \"./components/bullets/bullets\";\r\nimport Coins from \"./components/coins/coins\";\r\nimport Enemies from \"./components/enemies/enemies\";\r\nimport EnemyBullets from \"./components/enemyBullets/enemyBullets\";\r\nimport RocketComp from \"./components/rocket\";\r\nimport Score from \"./components/score/score\";\r\nimport {\r\n  gameReducer,\r\n  GameReducerState,\r\n  OVERHEAD_LIMIT,\r\n} from \"./Context/gameReducer\";\r\nimport Coin from \"./model/coin\";\r\nimport Enemy from \"./model/enemy\";\r\nimport Rocket from \"./model/rocket\";\r\n\r\nfunction getLine(\r\n  numberOfEnemies: number,\r\n  enemySize: number,\r\n  yOfLine: number,\r\n  marginDistanceWidth: number = 200\r\n) {\r\n  const enemies: Enemy[] = [];\r\n\r\n  const canvasLeftMargin = marginDistanceWidth;\r\n  const canvasRightMargin = window.innerWidth - marginDistanceWidth;\r\n  const canvasDistance = canvasRightMargin - canvasLeftMargin;\r\n  const spaceBetweenAliens = canvasDistance / (numberOfEnemies - 1);\r\n\r\n  let current = canvasLeftMargin;\r\n  for (let i = 0; i < numberOfEnemies; i++) {\r\n    enemies.push(\r\n      new Enemy(current - enemySize / 2, yOfLine, enemySize, enemySize)\r\n    );\r\n    current += spaceBetweenAliens;\r\n  }\r\n\r\n  return enemies;\r\n}\r\n\r\nfunction enemyGenerator() {\r\n  let enemies: Enemy[] = [];\r\n\r\n  const enemySize = (3 / 100) * window.innerWidth;\r\n\r\n  enemies = [\r\n    ...getLine(11, enemySize, 100, 200),\r\n    ...getLine(12, enemySize, 100 + enemySize + 20, 125),\r\n    ...getLine(11, enemySize, 100 + 2 * (enemySize + 20), 200),\r\n  ];\r\n\r\n  return enemies;\r\n}\r\n\r\nfunction App() {\r\n  const [play, setPlay] = useState(false);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const sound = useMemo(\r\n    () =>\r\n      new Howl({\r\n        src: \"https://soundbible.com/mp3/Laser%20Blasts-SoundBible.com-108608437.mp3\",\r\n        html5: true,\r\n        volume: 0.15,\r\n      }),\r\n    []\r\n  );\r\n  const [state, dispatch] = useReducer(gameReducer, {\r\n    rocket: new Rocket(\r\n      window.innerWidth / 2,\r\n      window.innerHeight - 150,\r\n      150,\r\n      200\r\n    ),\r\n    bullets: [],\r\n    enemyBullets: [],\r\n    enemies: enemyGenerator(),\r\n    pressedKeys: new Set<number>(),\r\n    score: 0,\r\n    isGameOver: false,\r\n    isOverHead: false,\r\n    coins: new Array<Coin>(),\r\n    candies: 0,\r\n    lives: 5,\r\n    sound: sound,\r\n  } as GameReducerState);\r\n\r\n  useEffect(() => {\r\n    if (state.isGameOver) {\r\n      setGameOver(true);\r\n      setPlay(false);\r\n    }\r\n  }, [state.isGameOver]);\r\n\r\n  return (\r\n    <>\r\n      {play && (\r\n        <div style={{ position: \"relative\" }}>\r\n          <video\r\n            autoPlay\r\n            muted\r\n            loop\r\n            style={{\r\n              position: \"fixed\",\r\n              right: \"0\",\r\n              bottom: \"0\",\r\n              minWidth: \"100%\",\r\n              maxWidth: \"100%\",\r\n            }}\r\n          >\r\n            <source src={BackgroundVideo} type=\"video/mp4\" />\r\n          </video>\r\n          <div className={styles.container}>\r\n            <Score\r\n              lives={state.lives}\r\n              score={state.score}\r\n              candies={state.candies}\r\n              overheadPercentage={(state.bullets.length / OVERHEAD_LIMIT) * 100}\r\n              enemiesNumber={state.enemies.length}\r\n              rocketPower={state.rocket.power}\r\n            />\r\n            <RocketComp dispatch={dispatch} rocket={state.rocket} />\r\n            <BulletsComponent bullets={state.bullets} dispatch={dispatch} />\r\n            <Enemies enemies={state.enemies} />\r\n            <EnemyBullets\r\n              enemyBullets={state.enemyBullets}\r\n              dispatch={dispatch}\r\n            />\r\n            <Coins coins={state.coins} dispatch={dispatch} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!play && (\r\n        <>\r\n          {gameOver ? (\r\n            <h1>Game Over</h1>\r\n          ) : (\r\n            <div className={styles.menuContainer}>\r\n              <div className={styles.buttons}>\r\n                <button\r\n                  className={styles.PlayButton}\r\n                  onClick={() => {\r\n                    setPlay(true);\r\n                    setGameOver(false);\r\n                  }}\r\n                >\r\n                  <h2 className={styles.buttonsText}> Play Game </h2>\r\n                </button>\r\n\r\n                <br />\r\n\r\n                <button className={styles.HelpButton}>\r\n                  <h2 className={styles.buttonsText}> Help </h2>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n// import { GameProvider } from \"./Context/gameProvider\";\r\n// import Enemy from \"./model/enemy\";\r\n// import Rocket from \"./model/rocket\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <GameProvider\r\n      rocket={\r\n        new Rocket(window.innerWidth / 2, window.innerHeight - 150, 1, 100, 150)\r\n      }\r\n      bullets={[]}\r\n      enemies={enemyGenerator()}\r\n    > */}\r\n    <App />\r\n    {/* </GameProvider> */}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals())\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}